package equipment

import (
	"github.com/invopop/ctxi18n/i18n"
	"github.com/jovandeginste/workout-tracker/v2/pkg/database"
	"github.com/jovandeginste/workout-tracker/v2/views/helpers"
	"github.com/jovandeginste/workout-tracker/v2/views/partials"
	"github.com/jovandeginste/workout-tracker/v2/views/workouts"
)

templ Show(e *database.Equipment) {
	@partials.Page(partials.NewPageOptions()) {
		{{ currentUser := helpers.CurrentUser(ctx) }}
		{{ pu := currentUser.PreferredUnits() }}
		<div class="gap-4">
			if e.User.ID == currentUser.ID {
				<span class="float-right actions">
					@actions(e)
				</span>
			}
			<h2>{ i18n.T(ctx, "menu.Equipment") }: { e.Name }</h2>
		</div>
		<div class="lg:flex lg:flex-wrap">
			<div class="basis-1/2">
				<div class="inner-form">
					<h3 class="grow justify-start">
						@helpers.IconFor("totals")
						{ i18n.T(ctx, "translation.Totals") }
					</h3>
					<table>
						{{ totals, _ := e.GetTotals() }}
						<tbody>
							<tr>
								<td>
									@helpers.IconFor("distance")
								</td>
								<th>{ i18n.T(ctx, "translation.Total_distance") }</th>
								<td>
									{ helpers.HumanDistance(ctx,totals.Distance) } { pu.Distance() }
								</td>
							</tr>
							<tr>
								<td>
									@helpers.IconFor("duration")
								</td>
								<th>{ i18n.T(ctx, "translation.Total_duration") }</th>
								<td>{ helpers.HumanDuration(totals.Duration ) }</td>
							</tr>
							<tr>
								<td>
									@helpers.IconFor("repetitions")
								</td>
								<th>{ i18n.T(ctx, "translation.Total_repetitions") }</th>
								<td>{ helpers.A2S(totals.Repetitions) }</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div class="inner-form">
					<table>
						<tbody>
							<tr>
								<td>
									@helpers.IconFor("date")
								</td>
								<th>{ i18n.T(ctx, "translation.Created") }</th>
								<td>
									@partials.SnippetDate(e.CreatedAt)
								</td>
							</tr>
							<tr>
								<td>
									@helpers.IconFor("note")
								</td>
								<th>{ i18n.T(ctx, "translation.Description") }</th>
								<td>{ e.Description }</td>
							</tr>
							<tr>
								<td>
									@helpers.IconFor("check")
								</td>
								<th>{ i18n.T(ctx, "translation.Active") }</th>
								<td>
									@templ.Raw(helpers.BoolToHTML(e.Active))
								</td>
							</tr>
							<tr>
								<td>
									@helpers.IconFor("workout")
								</td>
								<th>{ i18n.T(ctx, "translation.Default_workout_types") }</th>
								<td>
									<div class="flex flex-wrap">
										for _, d := range  e.DefaultFor {
											<span class="user-pill">{ d.String() }</span>
										}
									</div>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				if len(e.Notes) > 0 {
					<div class="inner-form">
						<h3>
							@helpers.IconFor("note")
							{ i18n.T(ctx, "translation.Notes") }
						</h3>
						<div>
							@templ.Raw(helpers.MarkdownToHTML(e.Notes))
						</div>
					</div>
				}
			</div>
			<div class="basis-1/2">
				<div class="inner-form">
					<h3 class="grow justify-start">
						@helpers.IconFor("workout")
						{ i18n.T(ctx, "menu.Workouts") }
					</h3>
					<table class="workout-info">
						<thead>
							<tr>
								<th></th>
								<th>{ i18n.T(ctx, "translation.Name") }</th>
								<th class="hidden sm:table-cell">{ i18n.T(ctx, "translation.Date") }</th>
							</tr>
						</thead>
						<tbody>
							for _, w := range e.Workouts {
								<tr>
									<td class="text-center">
										<div title={ i18n.T(ctx, w.Type.StringT()) }>
											@helpers.IconFor(w.Type.String())
										</div>
									</td>
									<td>
										<a href={ templ.SafeURL(helpers.RouteFor(ctx, "workout-show", w.ID)) }>
											@workouts.Name(&w, 20)
										</a>
									</td>
									<td class="hidden sm:table-cell">
										@partials.SnippetDate(w.Date)
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
	}
}
