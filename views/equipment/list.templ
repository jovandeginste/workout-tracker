package equipment

import (
	"github.com/invopop/ctxi18n/i18n"
	"github.com/jovandeginste/workout-tracker/v2/pkg/database"
	"github.com/jovandeginste/workout-tracker/v2/views/helpers"
	"github.com/jovandeginste/workout-tracker/v2/views/partials"
)

templ List(equipment []*database.Equipment) {
	@partials.Page(partials.NewPageOptions()) {
		<div class="items-baseline flex flex-wrap">
			<h2 class="grow justify-start">
				@helpers.IconFor("equipment")
				{ i18n.T(ctx, "menu.Equipment") } ({ helpers.A2S(len(equipment)) })
			</h2>
			<div class="justify-end mr-2">
				<a href={ templ.SafeURL(helpers.RouteFor(ctx, "equipment-add")) }>
					@helpers.IconFor("add")
					<span>{ i18n.T(ctx, "translation.Add_equipment") }</span>
				</a>
			</div>
		</div>
		<table class="equipment-info">
			<thead>
				<tr>
					<th>{ i18n.T(ctx, "translation.Name") }</th>
					<th>{ i18n.T(ctx, "translation.Active") }</th>
					<th>{ i18n.T(ctx, "menu.Workouts") }</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				for _, e := range equipment {
					<tr>
						<td>
							<a href={ templ.SafeURL(helpers.RouteFor(ctx, "equipment-show", e.ID)) }>{ e.Name }</a>
						</td>
						<td>
							@templ.Raw(helpers.BoolToHTML(e.Active))
						</td>
						<td>{ helpers.A2S(len(e.Workouts)) }</td>
						<td>
							<span class="actions">
								@actions(e)
							</span>
						</td>
					</tr>
				}
			</tbody>
		</table>
	}
}

templ actions(e *database.Equipment) {
	<form action={ templ.SafeURL(helpers.RouteFor(ctx, "equipment-edit", e.ID)) } method="get">
		<button class="button edit" title={ i18n.T(ctx, "translation.edit") }>
			<a>
				@helpers.IconFor("edit")
			</a>
		</button>
	</form>
	<button
		hx-get={ helpers.RouteFor(ctx, "equipment-delete-confirm", e.ID) }
		hx-target="#modal-container"
		hx-swap="innerHTML"
		class="button dangerous"
		title={ i18n.T(ctx, "translation.delete") }
	>
		@helpers.IconFor("delete")
	</button>
	<div id="modal-container">
		// Modal content will be loaded here
	</div>
}

templ DeleteModal(e *database.Equipment) {
	<div id="modalConfirmDelete" class="modal">
		<div class="window">
			<div class="flex justify-end p-2">
				<button
					class="button close-modal"
					hx-get={ helpers.RouteFor(ctx, "equipment", e.ID) }
					hx-target="body"
					hx-swap="innerHTML"
				>
					<a>
						@helpers.IconFor("close")
					</a>
				</button>
			</div>
			<div class="modal-content">
				<h3>
					{ i18n.T(ctx, "translation.Are_you_sure_you_want_to_delete_this_s", i18n.T(ctx, "misc.equipment")) }
					<div>
						{ e.Name }
					</div>
				</h3>
				<div class="flex">
					<button
						hx-post={ helpers.RouteFor(ctx, "equipment-delete", e.ID) }
						class="button confirm"
					>{ i18n.T(ctx, "translation.Continue") }</button>
					<button
						hx-get={ helpers.RouteFor(ctx, "equipment", e.ID) }
						hx-target="body"
						hx-swap="innerHTML"
						class="button cancel"
					>{ i18n.T(ctx, "translation.Cancel") }</button>
				</div>
			</div>
		</div>
	</div>
}
