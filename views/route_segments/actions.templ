package route_segments

import (
	"github.com/invopop/ctxi18n/i18n"
	"github.com/jovandeginste/workout-tracker/v2/pkg/database"
	"github.com/jovandeginste/workout-tracker/v2/views/helpers"
)

templ actions(s *database.RouteSegment) {
	<form action={ templ.SafeURL(helpers.RouteFor(ctx, "route-segment-download", s.ID)) } method="get">
		<button class="button download" title={ i18n.T(ctx, "translation.download") }>
			<a>
				@helpers.IconFor("download")
			</a>
		</button>
	</form>
	<form action={ templ.SafeURL(helpers.RouteFor(ctx, "route-segment-edit", s.ID)) } method="get">
		<button class="button edit" title={ i18n.T(ctx, "translation.edit") }>
			<a>
				@helpers.IconFor("edit")
			</a>
		</button>
	</form>
	<form action={ templ.SafeURL(helpers.RouteFor(ctx, "route-segment-refresh", s.ID)) } method="post">
		<button class="button" title={ i18n.T(ctx, "translation.refresh") }>
			<a>
				@helpers.IconFor("refresh")
			</a>
		</button>
	</form>
	<form action={ templ.SafeURL(helpers.RouteFor(ctx, "route-segment-matches", s.ID)) } method="post">
		<button class="button" title={ i18n.T(ctx, "translation.find_matches") }>
			<a>
				@helpers.IconFor("route-segment")
			</a>
		</button>
	</form>
	<button
		hx-get={ helpers.RouteFor(ctx, "route-segment-delete-confirm", s.ID) }
		hx-target="#modal-container"
		hx-swap="innerHTML"
		class="button dangerous"
		title={ i18n.T(ctx, "translation.delete") }
	>
		@helpers.IconFor("delete")
	</button>
	<div id="modal-container">
		// Modal content will be loaded here
	</div>
}

templ DeleteModal(s *database.RouteSegment) {
	<div id="modalConfirmDelete" class="modal">
		<div class="window">
			<div class="flex justify-end p-2">
				<button
					class="button close-modal"
					hx-get={ helpers.RouteFor(ctx, "route-segments", s.ID) }
					hx-target="body"
					hx-swap="innerHTML"
				>
					<a>
						@helpers.IconFor("close")
					</a>
				</button>
			</div>
			<div class="modal-content">
				<h3>
					{ i18n.T(ctx, "translation.Are_you_sure_you_want_to_delete_this_s", i18n.T(ctx, "misc.route_segment")) }
					<div>
						{ s.Name }
					</div>
				</h3>
				<div class="flex">
					<button
						hx-post={ helpers.RouteFor(ctx, "route-segment-delete", s.ID) }
						class="button confirm"
					>{ i18n.T(ctx, "translation.Continue") }</button>
					<button
						hx-get={ helpers.RouteFor(ctx, "route-segments", s.ID) }
						hx-target="body"
						hx-swap="innerHTML"
						class="button cancel"
					>{ i18n.T(ctx, "translation.Cancel") }</button>
				</div>
			</div>
		</div>
	</div>
}
