package user

import (
	"github.com/invopop/ctxi18n/i18n"
	"github.com/jovandeginste/workout-tracker/v2/pkg/database"
	"github.com/jovandeginste/workout-tracker/v2/views/helpers"
	"github.com/jovandeginste/workout-tracker/v2/views/partials"
)

templ Statistics(u *database.User, since, per string) {
	@partials.Page(partials.NewPageOptions()) {
		<script src={ helpers.RouteFor(ctx, "assets") + "/views/user/statistics.js" }></script>
		<h2>
			@helpers.IconFor("statistics")
			{ i18n.T(ctx, "translation.Your_progress_per_s_for_the_past_s", i18n.T(ctx, helpers.FindTranslationForKey(helpers.StatisticPerOptions(), per)), i18n.T(ctx, helpers.FindTranslationForKey(helpers.StatisticSinceOptions(), since))) }
		</h2>
		<div class="content">
			<form class="inner-form">
				<label for="since">{ i18n.T(ctx, "translation.Since") }</label>
				<select id="since" name="since">
					for _, o := range helpers.StatisticSinceOptions() {
						<option value={ o.Key } selected?={ o.Key == since }>{ i18n.T(ctx, o.Translation) }</option>
					}
				</select>
				<label for="per">{ i18n.T(ctx, "translation.Per") }</label>
				<select id="per" name="per">
					for _, o := range helpers.StatisticPerOptions() {
						<option value={ o.Key } selected?={ o.Key == per }>{ i18n.T(ctx, o.Translation) }</option>
					}
				</select>
				<button class="button" type="submit" value="Submit">{ i18n.T(ctx, "translation.refresh") }</button>
			</form>
		  {{ currentUser := helpers.CurrentUser(ctx) }}
		  {{ stats, err := currentUser.GetStatisticsFor(since, per) }}
		  if err != nil {
			  <pre>{ err.Error() }</pre>
		  }
			<div class="lg:flex lg:flex-wrap [&>*]:lg:basis-1/2 [&>*]:2xl:basis-1/3">
				<div>
					<div class="inner-form">
						<h3>
							@helpers.IconFor("workout")
							{ i18n.T(ctx, "menu.Workouts") }
						</h3>
						<wt-stat
						  id="workouts-per-time"
						  stats={ templ.JSONString(stats) }
						  preferred-units={ templ.JSONString(helpers.PreferredUnitsToJSON(currentUser.PreferredUnits())) }
						  type="workouts"></wt-stat>
					</div>
				</div>
				<div>
					<div class="inner-form">
						<h3>
							@helpers.IconFor("duration")
							{ i18n.T(ctx, "translation.Duration") }
						</h3>
						<wt-stat
						  id="duration-per-time"
						  stats={ templ.JSONString(stats) }
						  preferred-units={ templ.JSONString(helpers.PreferredUnitsToJSON(currentUser.PreferredUnits())) }
						  filter-no-duration
						  type="durationSeconds"
						  unit="duration"></wt-stat>
					</div>
				</div>
				<div>
					<div class="inner-form">
						<h3>
							@helpers.IconFor("distance")
							{ i18n.T(ctx, "translation.Distance") }
						</h3>
						<wt-stat
						  id="distance-per-time"
						  stats={ templ.JSONString(stats) }
						  preferred-units={ templ.JSONString(helpers.PreferredUnitsToJSON(currentUser.PreferredUnits())) }
						  filter-no-duration
						  type="localDistance"
						  unit="distance"></wt-stat>
					</div>
				</div>
				<div>
					<div class="inner-form">
						<h3>
							@helpers.IconFor("speed")
							{ i18n.T(ctx, "translation.Average_speed") }
						</h3>
						<wt-stat
						  id="average-speed-per-time"
						  stats={ templ.JSONString(stats) }
						  preferred-units={ templ.JSONString(helpers.PreferredUnitsToJSON(currentUser.PreferredUnits())) }
						  filter-no-duration
						  type="localAverageSpeed"
						  unit="speed"></wt-stat>
					</div>
				</div>
				<div>
					<div class="inner-form">
						<h3>
							@helpers.IconFor("speed")
							{ i18n.T(ctx, "translation.Average_speed_no_pause") }
						</h3>
						<wt-stat
						  id="average-speed-no-pause-per-time"
						  stats={ templ.JSONString(stats) }
						  preferred-units={ templ.JSONString(helpers.PreferredUnitsToJSON(currentUser.PreferredUnits())) }
						  filter-no-duration
						  type="localAverageSpeedNoPause"
						  unit="speed"></wt-stat>
					</div>
				</div>
				<div>
					<div class="inner-form">
						<h3>
							@helpers.IconFor("max-speed")
							{ i18n.T(ctx, "translation.Max_speed") }
						</h3>
						<wt-stat
						  id="max-speed-per-time"
						  stats={ templ.JSONString(stats) }
						  preferred-units={ templ.JSONString(helpers.PreferredUnitsToJSON(currentUser.PreferredUnits())) }
						  filter-no-duration
						  type="localMaxSpeed"
						  unit="speed"></wt-stat>
					</div>
				</div>
			</div>
		</div>
	}
}
