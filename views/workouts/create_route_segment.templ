package workouts

import (
	"github.com/invopop/ctxi18n/i18n"
	"github.com/jovandeginste/workout-tracker/v2/pkg/database"
	"github.com/jovandeginste/workout-tracker/v2/views/helpers"
	"github.com/jovandeginste/workout-tracker/v2/views/partials"
)

templ CreateRouteSegment(w *database.Workout) {
	@partials.Page(
		partials.NewPageOptions().
			WithSharing().
			WithWebComponent("views/workouts/create_route_segment"),
	) {
		<div class="gap-4">
			<h2>
				@helpers.IconFor(w.Type.String())
				@Name(w, 0)
			</h2>
		</div>
		<div class="lg:flex lg:flex-wrap">
			<div class="basis-1/2">
				<div class="inner-form">
					{{
	type mapPoint struct {
		Lat           float64 `json:"lat"`
		Lng           float64 `json:"lng"`
		TotalDistance float64 `json:"distance"`
	}

	points := []mapPoint{}
	for _, p := range w.Details().Points {
		points = append(points, mapPoint{
			Lat:           p.Lat,
			Lng:           p.Lng,
			TotalDistance: p.TotalDistance,
		})
	}
					}}
					<create-route-segment-map
						id="segment-map"
						class="border-2 border-black rounded-xl h-[300px] sm:h-[400px] md:h-[600px] print:w-full print:h-[600px]"
						map-center={ templ.JSONString([]float64{w.Data.Center.Lat, w.Data.Center.Lng}) }
						map-points={ templ.JSONString(points) }
					></create-route-segment-map>
				</div>
			</div>
			<div class="basis-1/2">
				<form
					class="inner-form"
					method="post"
					action={ templ.SafeURL(helpers.RouteFor(ctx, "workout-route-segment-create", w.ID)) }
				>
					<table>
						<tbody>
							<tr>
								<td><label for="name">{ i18n.T(ctx, "translation.Name") }</label></td>
								<td>
									<input
										type="text"
										id="name"
										name="name"
										value={ w.Name }
									/>
								</td>
							</tr>
							<tr>
								<td><label for="start">{ i18n.T(ctx, "translation.Start") }</label></td>
								<td>
									<input
										class="w-96"
										type="range"
										id="start"
										name="start"
										min="1"
										max={ helpers.A2S(len(w.Details().Points)) }
										value="1"
										oninput="getElementById('segment-map').updateStart()"
									/>
									<span id="start-show"></span>
								</td>
							</tr>
							<tr>
								<td><label for="end">{ i18n.T(ctx, "translation.End") }</label></td>
								<td>
									<input
										class="w-96"
										type="range"
										id="end"
										name="end"
										min="1"
										max={ helpers.A2S(len(w.Details().Points)) }
										value={ helpers.A2S(len(w.Details().Points)) }
										oninput="getElementById('segment-map').updateEnd()"
									/>
									<span id="end-show"></span>
								</td>
							</tr>
							<tr>
								<td><label for="distance">{ i18n.T(ctx, "translation.Distance") }</label></td>
								<td>
									<span id="distance-show"></span>
								</td>
							</tr>
						</tbody>
						<tfoot>
							<tr>
								<td></td>
								<td>
									<button class="button" type="submit">
										{ i18n.T(ctx, "translation.Create_route_segment") }
									</button>
								</td>
							</tr>
						</tfoot>
					</table>
				</form>
			</div>
		</div>
	}
}
