// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package workouts

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/jovandeginste/workout-tracker/v2/pkg/database"
	"github.com/jovandeginste/workout-tracker/v2/views/helpers"
)

func Stats(w *database.Workout) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"workout-card\"><div class=\"p-4 border-b border-gray-200 dark:border-neutral-700\"><div class=\"flex items-center justify-between\"><h3 class=\"font-semibold mb-0\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = helpers.IconFor("statistics").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "Statistics</h3><div class=\"flex items-center space-x-2\"><!-- Selection indicator --><button id=\"deselect-interval\" class=\"flex items-center space-x-2 px-3 py-1 bg-blue-500 dark:bg-blue-600 rounded text-xs hover:bg-red-400 dark:hover:bg-red-500 text-white hidden\" title=\"Deselect interval\" onclick=\"selectInterval(null)\"><div id=\"selection-indicator\">Interval 2 (1.0km)</div><span class=\"icon-[fa6-solid--xmark]\"></span></button></div></div></div><div class=\"stat-list\"><!-- Distance stats --><div class=\"stat-section\"><h4>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = helpers.IconFor("distance").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "Distance</h4><div class=\"stat-row\"><!-- Distance, moving time, pause time --></div></div><!-- Elevation Statistics --><div class=\"stat-section\"><h4>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = helpers.IconFor("elevation").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "Elevation</h4><div class=\"stat-row\"><!-- Elevation Gain, Loss, Average slop, max slope, min slope, vam, max height, min height --></div></div><!-- Speed Statistics --><div class=\"stat-section\"><h4>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = helpers.IconFor("speed").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "Speed</h4><div class=\"stat-row\"><div class=\"stat\"><div class=\"stat-label\">Average</div><div class=\"stat-value\">17.8 km/h</div></div><div class=\"stat\"><div class=\"stat-label\">Maximum</div><div class=\"stat-value\">47.4 km/h</div></div><div class=\"stat\"><div class=\"stat-label\">Moving Avg</div><div class=\"stat-value\">18.2 km/h</div></div></div></div><!-- Heart Rate Statistics --><div class=\"stat-section\"><h4>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = helpers.IconFor("heart-rate").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "Heart Rate</h4><div class=\"stat-row\"><div class=\"stat\"><div class=\"stat-label\">Minimum</div><div class=\"stat-value\">98 bpm</div></div><div class=\"stat\"><div class=\"stat-label\">Average</div><div class=\"stat-value\">142 bpm</div></div><div class=\"stat\"><div class=\"stat-label\">Maximum</div><div class=\"stat-value\">178 bpm</div></div></div></div><!-- Power/Cadence Statistics --><div class=\"stat-section\"><h4>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = helpers.IconFor("cadence").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "Cadence</h4><div class=\"stat-row\"><div class=\"stat\"><div class=\"stat-label\">Average</div><div class=\"stat-value\">84 rpm</div></div><div class=\"stat\"><div class=\"stat-label\">Maximum</div><div class=\"stat-value\">158 rpm</div></div></div></div><!-- Temperature Statistics --><div class=\"stat-section\"><h4>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = helpers.IconFor("temperature").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "Temperature</h4><div class=\"stat-row\"><!-- Min, max, avg --></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
