// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package workouts

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"context"
	"github.com/invopop/ctxi18n/i18n"
	"github.com/jovandeginste/workout-tracker/v2/pkg/database"
	"github.com/jovandeginste/workout-tracker/v2/views/helpers"
	"strings"
)

func DummyWorkoutPointTitle() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		return nil
	})
}

func PointTitle(ctx context.Context, preferredUnits *database.UserPreferredUnits, p *database.MapPoint) string {
	t := []string{
		"<ul><li><b>" + i18n.T(ctx, "translation.Time") + ":</b> ",
		helpers.LocalTime(ctx, p.Time).Format("15:04"),
		"</li><li><b>" + i18n.T(ctx, "translation.Distance") + ":</b> ",
		helpers.HumanDistance(ctx, p.TotalDistance) + " " + preferredUnits.Distance(),
		"</li><li><b>" + i18n.T(ctx, "translation.Duration") + ":</b> ",
		helpers.HumanDuration(p.TotalDuration),
		"</li><li><b>" + i18n.T(ctx, "translation.Speed") + ":</b> ",
		helpers.HumanSpeed(ctx, p.AverageSpeed()) + " " + preferredUnits.Speed(),
		"</li><li><b>" + i18n.T(ctx, "translation.Elevation") + ":</b> ",
		helpers.HumanElevation(ctx, p.ExtraMetrics.Get("elevation")) + " " + preferredUnits.Elevation(),
		"</li></ul>",
	}

	return strings.Join(t, "")
}

var _ = templruntime.GeneratedTemplate
